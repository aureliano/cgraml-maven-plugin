package com.github.aureliano.cgraml.code.builder;

import java.io.File;

import com.github.aureliano.cgraml.code.meta.ClassMeta;
import com.sun.codemodel.ClassType;
import com.sun.codemodel.JCodeModel;
import com.sun.codemodel.JDefinedClass;

public class ModelSchemaInterfaceBuilder implements IBuilder {

	private ClassMeta clazz;
	
	public ModelSchemaInterfaceBuilder() {
		super();
	}

	@SuppressWarnings("unchecked")
	@Override
	public ModelSchemaInterfaceBuilder parse(String pkg, String entity, Object resource) {
		String javaDoc = "Generated by srvraml-maven-plugin.\n\nDefine a type for API schema models.";
		
		this.clazz = new ClassMeta()
			.withPackageName(pkg + ".model")
			.withJavaDoc(javaDoc)
			.withClassName(entity);
		
		return this;
	}

	@SuppressWarnings("unchecked")
	@Override
	public ModelSchemaInterfaceBuilder build() {
		this.buildJavaClass();
		return this;
	}
	
	private void buildJavaClass() {
		try {
			JCodeModel codeModel = new JCodeModel();
			JDefinedClass definedClass = codeModel._class(this.clazz.getCanonicalClassName(), ClassType.INTERFACE);
			definedClass.javadoc().append(this.clazz.getJavaDoc());
			
			codeModel.build(new File("src/main/java"));
		} catch (Exception ex) {
			throw new RuntimeException(ex);
		}
	}
	
	public ClassMeta getClazz() {
		return clazz;
	}
	
	public ModelSchemaInterfaceBuilder withClazz(ClassMeta clazz) {
		this.clazz = clazz;
		return this;
	}
}